# WhisperEngine Quick Start - Docker Hub Version
# Minimal setup for fastest deployment

services:
  whisperengine:
    image: whisperengine/whisperengine:latest
    container_name: whisperengine-bot
    restart: unless-stopped
    
    # User provides their own .env file with Discord token, API keys, etc.
    env_file:
      - .env
      
    volumes:
      # Mount user's CDL character file
      # User should place their character.json file in the same directory as docker-compose.yml
      - ./character.json:/app/characters/character.json:ro
      # Optional: Mount entire characters directory if user has multiple characters
      # - ./characters:/app/characters:ro
      
    ports:
      - "9090:9090"  # Health check endpoints
      
    # Health check using built-in endpoints
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9090/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    depends_on:
      - redis
      - postgres
      - qdrant
      
  # Minimal required services
  # Infrastructure Services
  postgres:
    image: postgres:16-alpine
    container_name: whisperengine-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-whisper_engine}
      POSTGRES_USER: ${POSTGRES_USER:-bot_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bot_password_change_me}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      # Option 1: Named volume (default - managed by Docker)
      - postgres_data:/var/lib/postgresql/data
      # Option 2: Host filesystem mount (uncomment for external access)
      # - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
      
  qdrant:
    image: qdrant/qdrant:v1.8.1
    container_name: whisperengine-qdrant
    restart: unless-stopped
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      # Option 1: Named volume (default - managed by Docker)
      - qdrant_data:/qdrant/storage
      # Option 2: Host filesystem mount (uncomment for external access)
      # - ./data/qdrant:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"

volumes:
  # Named volumes (managed by Docker)
  # Data persists between container restarts but stored in Docker's internal directory
  # Use 'docker volume ls' to see volumes, 'docker volume inspect <name>' for location
  postgres_data:
  qdrant_data:
  
  # Alternative: Use host filesystem mounts instead (uncomment volume lines above)
  # Benefits: Easy backup, direct file access, clear data location
  # Create directories: mkdir -p data/{postgres,qdrant}
# WhisperEngine Quick Start
# Single-command deployment for non-technical users
# Uses pinned versions for maximum reliability and reproducibility

services:
  # Main WhisperEngine bot (HTTP API only by default)
  whisperengine-assistant:
    image: whisperengine/whisperengine:v1.0.1
    container_name: whisperengine-assistant
    ports:
      - "9090:9090"  # Chat API endpoint
    environment:
      # Core infrastructure
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=whisperengine
      - POSTGRES_PASSWORD=whisperengine_password
      - POSTGRES_DB=whisperengine
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION_NAME=whisperengine_memory_assistant
      
      # Bot configuration
      - DISCORD_BOT_NAME=assistant
      - CHARACTER_NAME=assistant
      - HEALTH_CHECK_PORT=9090
      
      # LLM Configuration (user will set via web UI)
      - LLM_CLIENT_TYPE=${LLM_CLIENT_TYPE:-openrouter}
      - LLM_CHAT_API_URL=${LLM_CHAT_API_URL:-https://openrouter.ai/api/v1}
      - LLM_CHAT_MODEL=${LLM_CHAT_MODEL:-anthropic/claude-3-haiku}
      - LLM_CHAT_API_KEY=${LLM_CHAT_API_KEY:-}
      
      # Discord (optional - only if token provided)
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN:-}
      - ENABLE_DISCORD=${ENABLE_DISCORD:-false}
      
      # Memory and intelligence
      - MEMORY_SYSTEM_TYPE=vector
      - ENABLE_CHARACTER_INTELLIGENCE=true
      - ENABLE_EMOTIONAL_INTELLIGENCE=true
      
      # InfluxDB (Temporal Intelligence & Machine Learning)
      - INFLUXDB_URL=${INFLUXDB_URL:-http://influxdb:8086}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-whisperengine-fidelity-first-metrics-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-whisperengine}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-performance_metrics}
      
      # Pre-downloaded model cache paths (models are bundled in container)
      - FASTEMBED_CACHE_PATH=/app/cache/fastembed
      - HF_HOME=/app/cache/huggingface
      - TRANSFORMERS_CACHE=/app/cache/huggingface
      - MODEL_CACHE_DIR=/app/models
      
      # Model configuration (models are pre-downloaded in container)
      - ROBERTA_EMOTION_MODEL_NAME=cardiffnlp/twitter-roberta-base-emotion-multilabel-latest
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      
    volumes:
      - ./logs:/app/logs
    networks:
      - whisperengine-network
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
      influxdb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CDL Web UI for character creation and management
  cdl-web-ui:
    image: whisperengine/whisperengine-ui:v1.0.1
    container_name: whisperengine-web-ui
    ports:
      - "3001:3000"  # Web interface
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=whisperengine
      - PGUSER=whisperengine
      - PGPASSWORD=whisperengine_password
      # API endpoint for bot management
      - WHISPERENGINE_API_URL=http://whisperengine-assistant:9090
    networks:
      - whisperengine-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:16.4-alpine
    container_name: whisperengine-postgres
    environment:
      - POSTGRES_DB=whisperengine
      - POSTGRES_USER=whisperengine
      - POSTGRES_PASSWORD=whisperengine_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - whisperengine-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whisperengine -d whisperengine"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.15.4
    container_name: whisperengine-qdrant
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - whisperengine-network
    restart: unless-stopped
    # Health check disabled - Qdrant containers have minimal tooling
    # Application will retry connections if Qdrant isn't ready yet

  # InfluxDB Time-Series Database (Temporal Intelligence & Machine Learning)
  influxdb:
    image: influxdb:2.7-alpine
    container_name: whisperengine-influxdb
    ports:
      - "8086:8086"  # InfluxDB UI access
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-whisperengine_metrics}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-whisperengine}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-performance_metrics}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-whisperengine-fidelity-first-metrics-token}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    networks:
      - whisperengine-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  qdrant_data:
  influxdb_data:
  influxdb_config:

networks:
  whisperengine-network:
    driver: bridge
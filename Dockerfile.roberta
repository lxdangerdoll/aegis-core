# Dockerfile for WhisperEngine with Pre-loaded RoBERTa Models
# Strategy: Download models during build, not runtime - instant startup!

FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better layer caching
COPY requirements-core.txt requirements-discord.txt ./

# Install Python dependencies with RoBERTa support
RUN pip install --no-cache-dir -r requirements-core.txt -r requirements-discord.txt

# PRE-LOAD ROBERTA MODELS DURING BUILD (Critical for instant startup)
# Download cardiffnlp/twitter-roberta-base-emotion-multilabel-latest (11 emotions)
RUN python -c "
from transformers import AutoTokenizer, AutoModelForSequenceClassification, pipeline
import os

print('ðŸš€ Pre-loading Cardiff NLP 11-emotion model during Docker build...')

# Download and cache the 11-emotion model
model_name = 'cardiffnlp/twitter-roberta-base-emotion-multilabel-latest'
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSequenceClassification.from_pretrained(model_name)

# Test the pipeline to ensure it's fully cached
classifier = pipeline('text-classification', model=model, tokenizer=tokenizer, return_all_scores=True, device=-1)
test_result = classifier('I am happy and excited about this!')

print('âœ… Cardiff NLP 11-emotion model pre-loaded and cached successfully')
print(f'   Model: cardiffnlp/twitter-roberta-base-emotion-multilabel-latest')
print(f'   Emotions: anger, anticipation, disgust, fear, joy, love, optimism, pessimism, sadness, surprise, trust')
print(f'   Emotions detected: {len(test_result[0])} (should be 11)')
"

# Copy application code
COPY . .

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app
RUN chown -R app:app /app
USER app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/health')"

# Default command
CMD ["python", "run.py"]